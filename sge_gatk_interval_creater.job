#!/bin/bash -l
# Force bash as the executing shell.
#$ -S /bin/bash
#$ -N interval
#$ -pe smp 4
# Join the error stream to the output stream.
#$ -j yes
#$ -l h_rt=12:00:00
#$ -l h_vmem=16G
#$ -l tmem=16G
#$ -l scr=60G
#$ -V


echo "the job is running on the node $HOSTNAME"
echo "job number $JOB_ID"

#parameters to be passed to the job
referencename=$1                          # eg human_g1k_v37
workplace=$2                              # directory where files will be copied to and from
bamfile=$3                               
interval=$4                               # intervals in which we want intervals created (somewhat confusing but it could be a specific chromosome or a bed file)
user=$5                                   # self explanatory


#################################################################
# where the references, resources and  applications are located #
#################################################################

APPDIR=/share/apps/genomics/GenomeAnalysisTK-3.4-46
REFDIR=/share/apps/cto/reference/g1kh37/
RESDIR=/share/apps/cto/reference/gatk_resources

###############################################
# where the references are located
###############################################


indels=$RESDIR/Mills_and_1000G_gold_standard.indels.b37.vcf.gz
snps=$RESDIR/dbsnp_138.b37.excluding_sites_after_129.vcf.gz

#############################################
# these are the files that will be output
#############################################

echo "file names to be created"

intervals=${bamfile:0:${#bamfile}-4}\.intervals

echo "$intervals"

############################
## load necessary modules ##
############################

module load samtools

##########################

cd /scratch0  || exit
if [ ! -d "$user" ]
then
	echo "####MESS the directory $user on /scratch0/ does not exist: creating it"
	mkdir "$user"
	cd "$user"  || exit
else
	echo "####MESS the directory $user on /scratch0 exists, moving to it"
	cd "$user"  || exit
fi 

##################################
# copy of the reference if needed
##################################

if [ ! -f "$referencename.fasta" ] || [ ! -f "$referencename.fasta.fai" ] || [ ! -f "$referencename.dict" ]

then
	echo "####MESS untaring the reference files to the temporary directory"
	tar -xzf $REFDIR/"$referencename"\.tar.gz -C /scratch0/"$user"/
else
	echo "####MESS the reference already exists in the node"
fi
			
echo "####MESS copy reference completed"
date

##### folder creation ##############

echo "creating the job directory"

mkdir "$JOB_ID"
cd "$JOB_ID"  || exit  
echo "####MESS I am now on directory:"
pwd


#################################################
# check if intervals file is given
#################################################

# fi interval is given as 0                                                 
if [ "$interval" == 0 ]                      # in this case no intervals are given
 then interval=""                                                             
# if $interval looks like bed file
elif [[ "$interval" == *"bed" ]]             # this procedure will copy a give bed file to the node
        then cp "$REFDIR"/"$interval" .  
elif [[ "$interval" == *"[1-9A-Z]" ]]	     # if interval is given as a chromosome then keep itthis will simply give the chromosome name to the variable
    then
    :
fi
################################
# copy all the files necessary #
################################

echo "### copying the bamfile"
date
cp "$workplace"/"$bamfile" .

if ! [ $? -eq 0 ]
   then
   exit 1
fi 

if [ -f "$workplace"/"$bamfile"\.bai ]
	then
	cp "$workplace"/"$bamfile"\.bai .
else
	echo "no bam index found, creating index"
	samtools index "$bamfile"
fi


echo "### copy completed"
date

echo "### copying the indelfile"
date
cp "$indels" .
cp "$snps" .

echo "### copy completed"
date

ls -lhrt

echo "# check if $interval is empty"

if  [ -z "$interval" ]
   
  then
	echo "no bed or chromosome given"
	echo "creating intervals file"
	
	java -XX:ParallelGCThreads=4 -Xms12g -Xmx12g -jar "$APPDIR"/GenomeAnalysisTK.jar \
   	-nt 4 \
        -I "$bamfile" \
   	-R /scratch0/"$user"/"$referencename".fasta \
   	-T RealignerTargetCreator \
   	-o "$intervals" \
   	--known $indels \
        --known $snps

	if [ $? -eq 0 ]
	  then
	    touch "$workplace"/interval_complete
	fi
        date

else

	echo "### creating the intervals"
	date

	java -XX:ParallelGCThreads=4 -Xms12g -Xmx12g -jar "$APPDIR"/GenomeAnalysisTK.jar  \
   	-I "$bamfile" \
        -nt 4 \
   	-R /scratch0/"$user"/"$referencename".fasta \
   	-T RealignerTargetCreator \
   	-L "$interval" \
   	--known $indels \
   	--known $snps \
   	-o "$intervals"
 
        if [ $? -eq 0 ]
          then
	   echo "### intervals created"
	   touch "$workplace"/interval_complete
	fi
        date

fi
###################
# copy files back #
###################

date
cp "$intervals" "$workplace"/.

echo "####MESS moving to /scratch0/$user"
date
cd /scratch0/"$user" || exit
echo "####MESS removing any left file"
rm -r "$JOB_ID"

####################
# remove reference #
####################

rm ./human*

echo "####MESS removal done"
date
echo "### job completed"
